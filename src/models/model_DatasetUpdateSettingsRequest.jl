# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DatasetUpdateSettingsRequest

    DatasetUpdateSettingsRequest(;
        title=nothing,
        subtitle=nothing,
        description=nothing,
        isPrivate=nothing,
        licenses=nothing,
        keywords=nothing,
        collaborators=nothing,
        data=nothing,
    )

    - title::String : Title of the dataset
    - subtitle::String : Subtitle of the dataset
    - description::String : Decription of the dataset
    - isPrivate::Bool : Whether or not the dataset should be private
    - licenses::Vector{Any} : A list of licenses that apply to this dataset
    - keywords::Vector{String} : A list of keywords that apply to this dataset
    - collaborators::Vector{Any} : A list of collaborators that may read or edit this dataset
    - data::Vector{Any} : A list containing metadata for each file in the dataset
"""
Base.@kwdef mutable struct DatasetUpdateSettingsRequest <: OpenAPI.APIModel
    title::Union{Nothing, String} = nothing
    subtitle::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    isPrivate::Union{Nothing, Bool} = nothing
    licenses::Union{Nothing, Vector{Any}} = nothing
    keywords::Union{Nothing, Vector{String}} = nothing
    collaborators::Union{Nothing, Vector{Any}} = nothing
    data::Union{Nothing, Vector{Any}} = nothing

    function DatasetUpdateSettingsRequest(title, subtitle, description, isPrivate, licenses, keywords, collaborators, data, )
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("title"), title)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("subtitle"), subtitle)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("description"), description)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("isPrivate"), isPrivate)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("licenses"), licenses)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("keywords"), keywords)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("collaborators"), collaborators)
        OpenAPI.validate_property(DatasetUpdateSettingsRequest, Symbol("data"), data)
        return new(title, subtitle, description, isPrivate, licenses, keywords, collaborators, data, )
    end
end # type DatasetUpdateSettingsRequest

const _property_types_DatasetUpdateSettingsRequest = Dict{Symbol,String}(Symbol("title")=>"String", Symbol("subtitle")=>"String", Symbol("description")=>"String", Symbol("isPrivate")=>"Bool", Symbol("licenses")=>"Vector{Any}", Symbol("keywords")=>"Vector{String}", Symbol("collaborators")=>"Vector{Any}", Symbol("data")=>"Vector{Any}", )
OpenAPI.property_type(::Type{ DatasetUpdateSettingsRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DatasetUpdateSettingsRequest[name]))}

function check_required(o::DatasetUpdateSettingsRequest)
    true
end

function OpenAPI.validate_property(::Type{ DatasetUpdateSettingsRequest }, name::Symbol, val)
end
