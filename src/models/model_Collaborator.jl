# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Collaborator

    Collaborator(;
        username=nothing,
        role=nothing,
    )

    - username::String : Username of the collaborator
    - role::String : Role of the collaborator
"""
Base.@kwdef mutable struct Collaborator <: OpenAPI.APIModel
    username::Union{Nothing, String} = nothing
    role::Union{Nothing, String} = nothing

    function Collaborator(username, role, )
        OpenAPI.validate_property(Collaborator, Symbol("username"), username)
        OpenAPI.validate_property(Collaborator, Symbol("role"), role)
        return new(username, role, )
    end
end # type Collaborator

const _property_types_Collaborator = Dict{Symbol,String}(Symbol("username")=>"String", Symbol("role")=>"String", )
OpenAPI.property_type(::Type{ Collaborator }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Collaborator[name]))}

function check_required(o::Collaborator)
    o.username === nothing && (return false)
    o.role === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Collaborator }, name::Symbol, val)
    if name === Symbol("role")
        OpenAPI.validate_param(name, "Collaborator", :enum, val, ["reader", "writer"])
    end
end
