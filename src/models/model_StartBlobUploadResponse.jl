# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StartBlobUploadResponse

    StartBlobUploadResponse(;
        token=nothing,
        createUrl=nothing,
    )

    - token::String : Opaque string token used to reference the new blob/file.
    - createUrl::String : URL to use to start the upload.
"""
Base.@kwdef mutable struct StartBlobUploadResponse <: OpenAPI.APIModel
    token::Union{Nothing, String} = nothing
    createUrl::Union{Nothing, String} = nothing

    function StartBlobUploadResponse(token, createUrl, )
        OpenAPI.validate_property(StartBlobUploadResponse, Symbol("token"), token)
        OpenAPI.validate_property(StartBlobUploadResponse, Symbol("createUrl"), createUrl)
        return new(token, createUrl, )
    end
end # type StartBlobUploadResponse

const _property_types_StartBlobUploadResponse = Dict{Symbol,String}(Symbol("token")=>"String", Symbol("createUrl")=>"String", )
OpenAPI.property_type(::Type{ StartBlobUploadResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StartBlobUploadResponse[name]))}

function check_required(o::StartBlobUploadResponse)
    o.token === nothing && (return false)
    o.createUrl === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ StartBlobUploadResponse }, name::Symbol, val)
end
