# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StartBlobUploadRequest

    StartBlobUploadRequest(;
        type=nothing,
        name=nothing,
        contentLength=nothing,
        contentType=nothing,
        lastModifiedEpochSeconds=nothing,
    )

    - type::Any : The type of the blob (one of \&quot;dataset\&quot;, \&quot;model\&quot;, \&quot;inbox\&quot;)
    - name::String : Name of the file
    - contentLength::Int64 : Content length of the file in bytes
    - contentType::String : Content/MIME type (e.g. \&quot;text/plain\&quot;) of the file
    - lastModifiedEpochSeconds::Int64 : Last modified date of file in seconds since epoch in UTC
"""
Base.@kwdef mutable struct StartBlobUploadRequest <: OpenAPI.APIModel
    type::Union{Nothing, Any} = nothing
    name::Union{Nothing, String} = nothing
    contentLength::Union{Nothing, Int64} = nothing
    contentType::Union{Nothing, String} = nothing
    lastModifiedEpochSeconds::Union{Nothing, Int64} = nothing

    function StartBlobUploadRequest(type, name, contentLength, contentType, lastModifiedEpochSeconds, )
        OpenAPI.validate_property(StartBlobUploadRequest, Symbol("type"), type)
        OpenAPI.validate_property(StartBlobUploadRequest, Symbol("name"), name)
        OpenAPI.validate_property(StartBlobUploadRequest, Symbol("contentLength"), contentLength)
        OpenAPI.validate_property(StartBlobUploadRequest, Symbol("contentType"), contentType)
        OpenAPI.validate_property(StartBlobUploadRequest, Symbol("lastModifiedEpochSeconds"), lastModifiedEpochSeconds)
        return new(type, name, contentLength, contentType, lastModifiedEpochSeconds, )
    end
end # type StartBlobUploadRequest

const _property_types_StartBlobUploadRequest = Dict{Symbol,String}(Symbol("type")=>"Any", Symbol("name")=>"String", Symbol("contentLength")=>"Int64", Symbol("contentType")=>"String", Symbol("lastModifiedEpochSeconds")=>"Int64", )
OpenAPI.property_type(::Type{ StartBlobUploadRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StartBlobUploadRequest[name]))}

function check_required(o::StartBlobUploadRequest)
    o.name === nothing && (return false)
    o.contentLength === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ StartBlobUploadRequest }, name::Symbol, val)
end
