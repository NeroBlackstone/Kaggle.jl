# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UploadFile

    UploadFile(;
        token=nothing,
        description=nothing,
        columns=nothing,
    )

    - token::String : A token referencing a specific file upload that can be used across requests
    - description::String : The file description
    - columns::Vector{DatasetColumn} : A list of dataset column metadata
"""
Base.@kwdef mutable struct UploadFile <: OpenAPI.APIModel
    token::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    columns::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DatasetColumn} }

    function UploadFile(token, description, columns, )
        OpenAPI.validate_property(UploadFile, Symbol("token"), token)
        OpenAPI.validate_property(UploadFile, Symbol("description"), description)
        OpenAPI.validate_property(UploadFile, Symbol("columns"), columns)
        return new(token, description, columns, )
    end
end # type UploadFile

const _property_types_UploadFile = Dict{Symbol,String}(Symbol("token")=>"String", Symbol("description")=>"String", Symbol("columns")=>"Vector{DatasetColumn}", )
OpenAPI.property_type(::Type{ UploadFile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UploadFile[name]))}

function check_required(o::UploadFile)
    true
end

function OpenAPI.validate_property(::Type{ UploadFile }, name::Symbol, val)
end
