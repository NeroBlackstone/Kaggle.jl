# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DatasetNewVersionRequest

    DatasetNewVersionRequest(;
        versionNotes=nothing,
        subtitle=nothing,
        description=nothing,
        files=nothing,
        convertToCsv=true,
        categoryIds=nothing,
        deleteOldVersions=false,
    )

    - versionNotes::String : The version notes for the new dataset version
    - subtitle::String : The subtitle to set on the dataset
    - description::String : The description to set on the dataset
    - files::Vector{UploadFile} : A list of files that should be associated with the dataset
    - convertToCsv::Bool : Whether or not a tabular dataset should be converted to csv
    - categoryIds::Vector{String} : A list of tag IDs to associated with the dataset
    - deleteOldVersions::Bool : Whether or not all previous versions of the dataset should be deleted upon creating the new version
"""
Base.@kwdef mutable struct DatasetNewVersionRequest <: OpenAPI.APIModel
    versionNotes::Union{Nothing, String} = nothing
    subtitle::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    files::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UploadFile} }
    convertToCsv::Union{Nothing, Bool} = true
    categoryIds::Union{Nothing, Vector{String}} = nothing
    deleteOldVersions::Union{Nothing, Bool} = false

    function DatasetNewVersionRequest(versionNotes, subtitle, description, files, convertToCsv, categoryIds, deleteOldVersions, )
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("versionNotes"), versionNotes)
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("subtitle"), subtitle)
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("description"), description)
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("files"), files)
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("convertToCsv"), convertToCsv)
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("categoryIds"), categoryIds)
        OpenAPI.validate_property(DatasetNewVersionRequest, Symbol("deleteOldVersions"), deleteOldVersions)
        return new(versionNotes, subtitle, description, files, convertToCsv, categoryIds, deleteOldVersions, )
    end
end # type DatasetNewVersionRequest

const _property_types_DatasetNewVersionRequest = Dict{Symbol,String}(Symbol("versionNotes")=>"String", Symbol("subtitle")=>"String", Symbol("description")=>"String", Symbol("files")=>"Vector{UploadFile}", Symbol("convertToCsv")=>"Bool", Symbol("categoryIds")=>"Vector{String}", Symbol("deleteOldVersions")=>"Bool", )
OpenAPI.property_type(::Type{ DatasetNewVersionRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DatasetNewVersionRequest[name]))}

function check_required(o::DatasetNewVersionRequest)
    o.versionNotes === nothing && (return false)
    o.files === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DatasetNewVersionRequest }, name::Symbol, val)
end
